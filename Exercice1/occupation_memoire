1.3
	Structure 1 : 10 * 10 * 8 = 800 octets
	
	Structure 2 :
		Un maillon contient 2 shared_ptr (suivant et précédent), et un triplet.
		2 * 8 = 16 octets pour les shared_ptr et 16 + 16 + 8 = 40 octets pour le triplet,
		soit un total de 56 octets par maillon.

		Il y a 2 maillons fictifs et 4 maillons pour les données : 6 * 56 = 336 octets

		Il est aussi nécéssaire de stocker la taille de la matrice, ce qui ajoute 16 octets.

		total : 336 + 16 = 352 octets

	Structure 3 :
		taille d'un maillon :
			2 shared_ptr : 2 * 8 = 16 octets
			les données (size_t et int) : 16 + 8 = 24 octets
			total : 16 + 24 = 40 octets
		Chaque case du tableau contient au moins 2 maillons : 10 * 40 * 2 octets = 800 octets
		La matrice à 4 éléments non nuls : 4 * 40 = 160 octets
		total : 960 octets

1.4
	Si la taille de la matrice est 100 :
	Structure 1 : 100 * 100 * 8 = 80 000 octets.

	Structure 2 :
		1 noeud : 56 octets
		le nombre de noeuds ne change pas puisque les éléments ajoutés on pour valeur 0.
		il faut stocker la taille de la matrice : 16 octets
		total : 6 * 56 + 16 = 336 + 16 = 352 octets

	Structure 3 :
		1 noeud : 40 octets
		il y a 100 * 2 * 40 = 8000 octets pour pour les têtes et queues fictives
		et 4 noeuds (4 * 40 = 160 octets) pour les données
		total : 8160

1.5
	Si la taille de la matrice est 1000 :
	Structure 1 : 1000 * 1000 * 8 = 8 000 000 octets

	Structure 2 :
		1 noeud : 56 octets
		le nombre de noeuds ne change pas puisque les éléments ajoutés on pour valeur 0.
		il faut stocker la taille de la matrice : 16 octets
		total : 6 * 56 + 16 = 352

	Structure 3 :
		1 noeud : 40 octes
		il y a 1000 * 2 * 40 = 80 000 octets pour les têtes et queues fictives
		et 4 noeuds (4 * 40 = 160 octets) pour les données
		total : 80 160 octets
